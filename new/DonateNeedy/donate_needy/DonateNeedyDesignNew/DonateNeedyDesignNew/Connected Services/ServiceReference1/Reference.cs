//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DonateNeedyDesignNew.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_CRUDtblDonations_Result", Namespace="http://schemas.datacontract.org/2004/07/DonateNeedyNewServiceLayer")]
    [System.SerializableAttribute()]
    public partial class usp_CRUDtblDonations_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EventIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> anonymusdonorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> anonymusnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string commentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string currencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string donationAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int donationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> donationTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<bool> emailnotificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string receivedAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int statusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transactionChargeSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string transactionIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> anonymusdonor {
            get {
                return this.anonymusdonorField;
            }
            set {
                if ((this.anonymusdonorField.Equals(value) != true)) {
                    this.anonymusdonorField = value;
                    this.RaisePropertyChanged("anonymusdonor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> anonymusname {
            get {
                return this.anonymusnameField;
            }
            set {
                if ((this.anonymusnameField.Equals(value) != true)) {
                    this.anonymusnameField = value;
                    this.RaisePropertyChanged("anonymusname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string comments {
            get {
                return this.commentsField;
            }
            set {
                if ((object.ReferenceEquals(this.commentsField, value) != true)) {
                    this.commentsField = value;
                    this.RaisePropertyChanged("comments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string currency {
            get {
                return this.currencyField;
            }
            set {
                if ((object.ReferenceEquals(this.currencyField, value) != true)) {
                    this.currencyField = value;
                    this.RaisePropertyChanged("currency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string donationAmount {
            get {
                return this.donationAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.donationAmountField, value) != true)) {
                    this.donationAmountField = value;
                    this.RaisePropertyChanged("donationAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int donationID {
            get {
                return this.donationIDField;
            }
            set {
                if ((this.donationIDField.Equals(value) != true)) {
                    this.donationIDField = value;
                    this.RaisePropertyChanged("donationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> donationTypeID {
            get {
                return this.donationTypeIDField;
            }
            set {
                if ((this.donationTypeIDField.Equals(value) != true)) {
                    this.donationTypeIDField = value;
                    this.RaisePropertyChanged("donationTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string emailID {
            get {
                return this.emailIDField;
            }
            set {
                if ((object.ReferenceEquals(this.emailIDField, value) != true)) {
                    this.emailIDField = value;
                    this.RaisePropertyChanged("emailID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<bool> emailnotification {
            get {
                return this.emailnotificationField;
            }
            set {
                if ((this.emailnotificationField.Equals(value) != true)) {
                    this.emailnotificationField = value;
                    this.RaisePropertyChanged("emailnotification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string receivedAmount {
            get {
                return this.receivedAmountField;
            }
            set {
                if ((object.ReferenceEquals(this.receivedAmountField, value) != true)) {
                    this.receivedAmountField = value;
                    this.RaisePropertyChanged("receivedAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int statusID {
            get {
                return this.statusIDField;
            }
            set {
                if ((this.statusIDField.Equals(value) != true)) {
                    this.statusIDField = value;
                    this.RaisePropertyChanged("statusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transactionChargeS {
            get {
                return this.transactionChargeSField;
            }
            set {
                if ((object.ReferenceEquals(this.transactionChargeSField, value) != true)) {
                    this.transactionChargeSField = value;
                    this.RaisePropertyChanged("transactionChargeS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string transactionID {
            get {
                return this.transactionIDField;
            }
            set {
                if ((object.ReferenceEquals(this.transactionIDField, value) != true)) {
                    this.transactionIDField = value;
                    this.RaisePropertyChanged("transactionID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="usp_CreateErrorLog_Result", Namespace="http://schemas.datacontract.org/2004/07/DonateNeedyNewServiceLayer")]
    [System.SerializableAttribute()]
    public partial class usp_CreateErrorLog_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorPageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> registrationidField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorPage {
            get {
                return this.ErrorPageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorPageField, value) != true)) {
                    this.ErrorPageField = value;
                    this.RaisePropertyChanged("ErrorPage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorType {
            get {
                return this.ErrorTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorTypeField, value) != true)) {
                    this.ErrorTypeField = value;
                    this.RaisePropertyChanged("ErrorType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> registrationid {
            get {
                return this.registrationidField;
            }
            set {
                if ((this.registrationidField.Equals(value) != true)) {
                    this.registrationidField = value;
                    this.RaisePropertyChanged("registrationid");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/donation", ReplyAction="http://tempuri.org/IService1/donationResponse")]
        DonateNeedyDesignNew.ServiceReference1.usp_CRUDtblDonations_Result[] donation(
                    System.Nullable<int> donationid, 
                    System.Nullable<int> donationTypeID, 
                    System.Nullable<int> eventID, 
                    System.Nullable<int> statusID, 
                    string donationAmount, 
                    string emailID, 
                    string phoneNUmber, 
                    string comments, 
                    string transactionCharges, 
                    string receivedAmount, 
                    string transActionID, 
                    string currency, 
                    System.Nullable<bool> emailNotification, 
                    System.Nullable<bool> anonymusDonar, 
                    System.Nullable<bool> anonymusName, 
                    System.Nullable<int> registrationID, 
                    System.Nullable<int> mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/donation", ReplyAction="http://tempuri.org/IService1/donationResponse")]
        System.Threading.Tasks.Task<DonateNeedyDesignNew.ServiceReference1.usp_CRUDtblDonations_Result[]> donationAsync(
                    System.Nullable<int> donationid, 
                    System.Nullable<int> donationTypeID, 
                    System.Nullable<int> eventID, 
                    System.Nullable<int> statusID, 
                    string donationAmount, 
                    string emailID, 
                    string phoneNUmber, 
                    string comments, 
                    string transactionCharges, 
                    string receivedAmount, 
                    string transActionID, 
                    string currency, 
                    System.Nullable<bool> emailNotification, 
                    System.Nullable<bool> anonymusDonar, 
                    System.Nullable<bool> anonymusName, 
                    System.Nullable<int> registrationID, 
                    System.Nullable<int> mode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/error", ReplyAction="http://tempuri.org/IService1/errorResponse")]
        DonateNeedyDesignNew.ServiceReference1.usp_CreateErrorLog_Result[] error(string errorType, string errorMessage, string errorPage, System.Nullable<int> registrationId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/error", ReplyAction="http://tempuri.org/IService1/errorResponse")]
        System.Threading.Tasks.Task<DonateNeedyDesignNew.ServiceReference1.usp_CreateErrorLog_Result[]> errorAsync(string errorType, string errorMessage, string errorPage, System.Nullable<int> registrationId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : DonateNeedyDesignNew.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<DonateNeedyDesignNew.ServiceReference1.IService1>, DonateNeedyDesignNew.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DonateNeedyDesignNew.ServiceReference1.usp_CRUDtblDonations_Result[] donation(
                    System.Nullable<int> donationid, 
                    System.Nullable<int> donationTypeID, 
                    System.Nullable<int> eventID, 
                    System.Nullable<int> statusID, 
                    string donationAmount, 
                    string emailID, 
                    string phoneNUmber, 
                    string comments, 
                    string transactionCharges, 
                    string receivedAmount, 
                    string transActionID, 
                    string currency, 
                    System.Nullable<bool> emailNotification, 
                    System.Nullable<bool> anonymusDonar, 
                    System.Nullable<bool> anonymusName, 
                    System.Nullable<int> registrationID, 
                    System.Nullable<int> mode) {
            return base.Channel.donation(donationid, donationTypeID, eventID, statusID, donationAmount, emailID, phoneNUmber, comments, transactionCharges, receivedAmount, transActionID, currency, emailNotification, anonymusDonar, anonymusName, registrationID, mode);
        }
        
        public System.Threading.Tasks.Task<DonateNeedyDesignNew.ServiceReference1.usp_CRUDtblDonations_Result[]> donationAsync(
                    System.Nullable<int> donationid, 
                    System.Nullable<int> donationTypeID, 
                    System.Nullable<int> eventID, 
                    System.Nullable<int> statusID, 
                    string donationAmount, 
                    string emailID, 
                    string phoneNUmber, 
                    string comments, 
                    string transactionCharges, 
                    string receivedAmount, 
                    string transActionID, 
                    string currency, 
                    System.Nullable<bool> emailNotification, 
                    System.Nullable<bool> anonymusDonar, 
                    System.Nullable<bool> anonymusName, 
                    System.Nullable<int> registrationID, 
                    System.Nullable<int> mode) {
            return base.Channel.donationAsync(donationid, donationTypeID, eventID, statusID, donationAmount, emailID, phoneNUmber, comments, transactionCharges, receivedAmount, transActionID, currency, emailNotification, anonymusDonar, anonymusName, registrationID, mode);
        }
        
        public DonateNeedyDesignNew.ServiceReference1.usp_CreateErrorLog_Result[] error(string errorType, string errorMessage, string errorPage, System.Nullable<int> registrationId) {
            return base.Channel.error(errorType, errorMessage, errorPage, registrationId);
        }
        
        public System.Threading.Tasks.Task<DonateNeedyDesignNew.ServiceReference1.usp_CreateErrorLog_Result[]> errorAsync(string errorType, string errorMessage, string errorPage, System.Nullable<int> registrationId) {
            return base.Channel.errorAsync(errorType, errorMessage, errorPage, registrationId);
        }
    }
}
