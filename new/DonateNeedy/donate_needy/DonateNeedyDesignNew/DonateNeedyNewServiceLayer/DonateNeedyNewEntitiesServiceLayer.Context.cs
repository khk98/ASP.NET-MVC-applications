//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DonateNeedyNewServiceLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DonateNeedyNewEntitiesServiceLayer : DbContext
    {
        public DonateNeedyNewEntitiesServiceLayer()
            : base("name=DonateNeedyNewEntitiesServiceLayer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<usp_CreateErrorLog_Result> usp_CreateErrorLog(string errorType, string errorMessage, string errorPage, Nullable<int> registrationid)
        {
            var errorTypeParameter = errorType != null ?
                new ObjectParameter("ErrorType", errorType) :
                new ObjectParameter("ErrorType", typeof(string));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var errorPageParameter = errorPage != null ?
                new ObjectParameter("ErrorPage", errorPage) :
                new ObjectParameter("ErrorPage", typeof(string));
    
            var registrationidParameter = registrationid.HasValue ?
                new ObjectParameter("registrationid", registrationid) :
                new ObjectParameter("registrationid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CreateErrorLog_Result>("usp_CreateErrorLog", errorTypeParameter, errorMessageParameter, errorPageParameter, registrationidParameter);
        }
    
        public virtual ObjectResult<usp_CRUDtblDonations_Result> usp_CRUDtblDonations(Nullable<int> donationID, Nullable<int> donationTypeID, Nullable<int> eventID, Nullable<int> statusID, string donationAmount, string emailID, string phoneNumber, string comments, string transactionChargeS, string receivedAmount, string transactionID, string currency, Nullable<bool> emailnotification, Nullable<bool> anonymusdonor, Nullable<bool> anonymusname, Nullable<int> registrationID, Nullable<int> mode)
        {
            var donationIDParameter = donationID.HasValue ?
                new ObjectParameter("donationID", donationID) :
                new ObjectParameter("donationID", typeof(int));
    
            var donationTypeIDParameter = donationTypeID.HasValue ?
                new ObjectParameter("donationTypeID", donationTypeID) :
                new ObjectParameter("donationTypeID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("statusID", statusID) :
                new ObjectParameter("statusID", typeof(int));
    
            var donationAmountParameter = donationAmount != null ?
                new ObjectParameter("donationAmount", donationAmount) :
                new ObjectParameter("donationAmount", typeof(string));
    
            var emailIDParameter = emailID != null ?
                new ObjectParameter("emailID", emailID) :
                new ObjectParameter("emailID", typeof(string));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("comments", comments) :
                new ObjectParameter("comments", typeof(string));
    
            var transactionChargeSParameter = transactionChargeS != null ?
                new ObjectParameter("transactionChargeS", transactionChargeS) :
                new ObjectParameter("transactionChargeS", typeof(string));
    
            var receivedAmountParameter = receivedAmount != null ?
                new ObjectParameter("receivedAmount", receivedAmount) :
                new ObjectParameter("receivedAmount", typeof(string));
    
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("transactionID", transactionID) :
                new ObjectParameter("transactionID", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("currency", currency) :
                new ObjectParameter("currency", typeof(string));
    
            var emailnotificationParameter = emailnotification.HasValue ?
                new ObjectParameter("emailnotification", emailnotification) :
                new ObjectParameter("emailnotification", typeof(bool));
    
            var anonymusdonorParameter = anonymusdonor.HasValue ?
                new ObjectParameter("anonymusdonor", anonymusdonor) :
                new ObjectParameter("anonymusdonor", typeof(bool));
    
            var anonymusnameParameter = anonymusname.HasValue ?
                new ObjectParameter("anonymusname", anonymusname) :
                new ObjectParameter("anonymusname", typeof(bool));
    
            var registrationIDParameter = registrationID.HasValue ?
                new ObjectParameter("registrationID", registrationID) :
                new ObjectParameter("registrationID", typeof(int));
    
            var modeParameter = mode.HasValue ?
                new ObjectParameter("Mode", mode) :
                new ObjectParameter("Mode", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_CRUDtblDonations_Result>("usp_CRUDtblDonations", donationIDParameter, donationTypeIDParameter, eventIDParameter, statusIDParameter, donationAmountParameter, emailIDParameter, phoneNumberParameter, commentsParameter, transactionChargeSParameter, receivedAmountParameter, transactionIDParameter, currencyParameter, emailnotificationParameter, anonymusdonorParameter, anonymusnameParameter, registrationIDParameter, modeParameter);
        }
    }
}
